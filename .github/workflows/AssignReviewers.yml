## @file
# Assign reviewers from .github/REVIEWERS using CODEWONERS syntax
#
# Copyright (c) 2022, Intel Corporation. All rights reserved.<BR>
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

name: Assign reviewers from .github/REVIEWERS using CODEWONERS syntax

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - master
      - 'stable/**'

permissions:
    pull-requests: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  assign_reviewers:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{github.event.pull_request.base.ref}}
      - uses: actions/setup-python@v2
      - run: pip install codeowners GitPython PyGithub
      - name: Assign Reviewers from .github/REVIEWERS
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import json
            from   codeowners import CodeOwners
            from   git        import Git
            from   github     import Github
            Hub = None
            AllReviewers = CodeOwners(open('.github/REVIEWERS').read())
            LocalRepo = Git('.')
            LocalRepo.fetch(
                        'origin',
                        '+refs/pull/${{ github.event.pull_request.number }}/*:refs/remotes/origin/pr/${{ github.event.pull_request.number }}/*',
                        depth=${{ github.event.pull_request.commits }} + 1
                        )
            ModifiedFiles = LocalRepo.diff(
                              '${{github.event.pull_request.head.sha}}~${{ github.event.pull_request.commits }}..${{github.event.pull_request.head.sha}}',
                              '--name-only'
                              )
            FileReviewers = set()
            for File in ModifiedFiles.split():
                print ('File:', File, AllReviewers.of(File))
                FileReviewers |= set(AllReviewers.of(File))
            UserReviewers = set()
            TeamReviewers = set()
            for FileReviewer in FileReviewers:
                if FileReviewer[0] == 'USERNAME':
                    UserReviewers.add (FileReviewer[1][1:])
                elif FileReviewer[0] == 'TEAM':
                    TeamReviewers.add (FileReviewer[1][1:])
                elif FileReviewer[0] == 'EMAIL':
                    if not Hub:
                        Hub = Github('${{ secrets.GITHUB_TOKEN }}')
                    SearchResult = Hub.search_users(FileReviewer[1] + ' in:email')
                    print ('Search:', FileReviewer[1], [x for x in SearchResult])
                    for User in SearchResult:
                        if FileReviewer[1].lower() == User.email.lower():
                            UserReviewers.add (User.login)
                            break
            UserReviewers -= set([x['login'] for x in json.loads ('''${{ toJSON(github.event.pull_request.requested_reviewers)}}''')])
            TeamReviewers -= set([x['login'] for x in json.loads ('''${{ toJSON(github.event.pull_request.requested_teams)}}''')])
            if UserReviewers or TeamReviewers:
                print ('Add Reviewers User:', UserReviewers, 'Team:', TeamReviewers)
                if not Hub:
                    Hub = Github('${{ secrets.GITHUB_TOKEN }}')
                HubPullRequest = Hub.get_repo('${{ github.event.repository.full_name }}').get_pull(${{ github.event.pull_request.number }})
                HubPullRequest.create_review_request(list(UserReviewers), list(TeamReviewers))
